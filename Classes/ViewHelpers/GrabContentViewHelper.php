<?php
/**
 * Created by PhpStorm.
 * User: kay
 * Date: 18.11.14
 * Time: 09:55
 */

namespace KayStrobach\Custom\ViewHelpers;

use KayStrobach\Custom\Utility\GrabUtility;
use Neos\Flow\Annotations as Flow;

class GrabContentViewHelper extends \Neos\FluidAdaptor\Core\ViewHelper\AbstractViewHelper
{

    /**
     * @Flow\Inject
     * @var \KayStrobach\Custom\Utility\GrabUtility
     */
    protected $grabUtility;

    /**
     * Specifies whether the escaping interceptors should be disabled or enabled for the render-result of this ViewHelper
     * @see isOutputEscapingEnabled()
     *
     * @var boolean
     * @api
     */
    protected $escapeOutput = false;

    public function initializeArguments()
    {
        parent::initializeArguments(); // TODO: Change the autogenerated stub
        $this->registerArgument('uri', 'string', 'the uri', true);
        $this->registerArgument('selector', 'string', 'the selector', true);
        $this->registerArgument('debug', 'boolean', 'debug or not', false, true);
        $this->registerArgument('lifetime', 'string', 'the uri', false, 3600);
    }

    /**
     * @param string $uri
     * @param string $selector
     * @param bool $debug
     * @param int $lifetime
     * @return string
     */
    public function render($uri, $selector, $debug = false, $lifetime = 3600)
    {
        return $this->grabUtility->getContent(
            $this->arguments['uri'],
            $this->arguments['selector'],
            $this->arguments['debug'],
            $this->arguments['lifetime']
        );
    }
}
